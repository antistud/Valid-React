{"ast":null,"code":"import React from 'react';\nimport { ApolloClient, InMemoryCache, gql, useQuery } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'https://api-us-east-1-shared-usea1-02.hygraph.com/v2/clulby30c003s07wb6t1od0lc/master',\n  cache: new InMemoryCache()\n});\nconst GET_PRODUCTS_QUERY = gql`\n  query GetProducts {\n    items {\n      id\n      name\n      description\n    }\n  }\n`;\n\n//get posts query\nconst GET_POSTS_QUERY = gql`\n    query GetPosts {\n        posts {\n            body\n            createdAt\n            id\n            publishedAt\n            slug\n            subtitle\n            title\n            updatedAt\n            image {\n              url\n            }\n          }\n    }\n    `;\n\n//get post by slug query\nconst GET_POST_BY_SLUG_QUERY = gql`\n    query Posts($slug: String!) {\n            post(where: {slug:$slug}) {\n              body\n              createdAt\n              publishedAt\n              slug\n              subtitle\n              title\n              image {\n                url\n              }\n            }\n    }\n    `;\n\n// get pages by slug query\nconst GET_PAGE_BY_SLUG_QUERY = gql`\n    query Pages($slug: String!) {\n            page(where: {slug:$slug}) {\n                body\n                slug\n                subheader\n                title\n                header\n              }\n            }\n    }\n    `;\n\n// get docs by slug query\nconst GET_DOC_BY_SLUG_QUERY = gql`\n    query Docs($slug: String!) {\n            doc(where: {slug:$slug}) {\n                body\n                slug\n                subheader\n                title\n                header\n              }\n            }\n    }\n    `;\nconst DB = {\n  getPosts: async () => {\n    const {\n      data\n    } = await client.query({\n      query: GET_POSTS_QUERY\n    });\n    return data.posts;\n  },\n  getPostBySlug: async slug => {\n    const {\n      data\n    } = await client.query({\n      query: GET_POST_BY_SLUG_QUERY,\n      variables: {\n        slug\n      }\n    });\n    return data.post;\n  },\n  getPageBySlug: async slug => {\n    const {\n      data\n    } = await client.query({\n      query: GET_PAGE_BY_SLUG_QUERY,\n      variables: {\n        slug\n      }\n    });\n    return data.page;\n  }\n};\nexport default DB;","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","gql","useQuery","client","uri","cache","GET_PRODUCTS_QUERY","GET_POSTS_QUERY","GET_POST_BY_SLUG_QUERY","GET_PAGE_BY_SLUG_QUERY","GET_DOC_BY_SLUG_QUERY","DB","getPosts","data","query","posts","getPostBySlug","slug","variables","post","getPageBySlug","page"],"sources":["/Users/jrhoades/Documents/projects/Valid-React/src/data/db.js"],"sourcesContent":["import React from 'react';\nimport { ApolloClient, InMemoryCache, gql, useQuery } from '@apollo/client';\n\n\nconst client = new ApolloClient({\n    uri: 'https://api-us-east-1-shared-usea1-02.hygraph.com/v2/clulby30c003s07wb6t1od0lc/master',\n    cache: new InMemoryCache(),\n});\n\nconst GET_PRODUCTS_QUERY = gql`\n  query GetProducts {\n    items {\n      id\n      name\n      description\n    }\n  }\n`;\n\n//get posts query\nconst GET_POSTS_QUERY = gql`\n    query GetPosts {\n        posts {\n            body\n            createdAt\n            id\n            publishedAt\n            slug\n            subtitle\n            title\n            updatedAt\n            image {\n              url\n            }\n          }\n    }\n    `;\n\n//get post by slug query\nconst GET_POST_BY_SLUG_QUERY = gql`\n    query Posts($slug: String!) {\n            post(where: {slug:$slug}) {\n              body\n              createdAt\n              publishedAt\n              slug\n              subtitle\n              title\n              image {\n                url\n              }\n            }\n    }\n    `;\n\n\n// get pages by slug query\nconst GET_PAGE_BY_SLUG_QUERY = gql`\n    query Pages($slug: String!) {\n            page(where: {slug:$slug}) {\n                body\n                slug\n                subheader\n                title\n                header\n              }\n            }\n    }\n    `;\n\n// get docs by slug query\nconst GET_DOC_BY_SLUG_QUERY = gql`\n    query Docs($slug: String!) {\n            doc(where: {slug:$slug}) {\n                body\n                slug\n                subheader\n                title\n                header\n              }\n            }\n    }\n    `;\n\nconst DB = {\n    getPosts: async () => {\n        const { data } = await client.query({\n            query: GET_POSTS_QUERY\n        });\n        return data.posts;\n    },\n    getPostBySlug: async (slug) => {\n        const { data } = await client.query({\n            query: GET_POST_BY_SLUG_QUERY,\n            variables: { slug }\n        });\n        return data.post;\n    },\n    getPageBySlug: async (slug) => {\n        const { data } = await client.query({\n            query: GET_PAGE_BY_SLUG_QUERY,\n            variables: { slug }\n        });\n        return data.page;\n    }\n}\n\nexport default DB;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,aAAa,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAG3E,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EAC5BK,GAAG,EAAE,uFAAuF;EAC5FC,KAAK,EAAE,IAAIL,aAAa,CAAC;AAC7B,CAAC,CAAC;AAEF,MAAMM,kBAAkB,GAAGL,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMM,eAAe,GAAGN,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,MAAMO,sBAAsB,GAAGP,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAGL;AACA,MAAMQ,sBAAsB,GAAGR,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,MAAMS,qBAAqB,GAAGT,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AAEL,MAAMU,EAAE,GAAG;EACPC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,MAAM,CAACW,KAAK,CAAC;MAChCA,KAAK,EAAEP;IACX,CAAC,CAAC;IACF,OAAOM,IAAI,CAACE,KAAK;EACrB,CAAC;EACDC,aAAa,EAAE,MAAOC,IAAI,IAAK;IAC3B,MAAM;MAAEJ;IAAK,CAAC,GAAG,MAAMV,MAAM,CAACW,KAAK,CAAC;MAChCA,KAAK,EAAEN,sBAAsB;MAC7BU,SAAS,EAAE;QAAED;MAAK;IACtB,CAAC,CAAC;IACF,OAAOJ,IAAI,CAACM,IAAI;EACpB,CAAC;EACDC,aAAa,EAAE,MAAOH,IAAI,IAAK;IAC3B,MAAM;MAAEJ;IAAK,CAAC,GAAG,MAAMV,MAAM,CAACW,KAAK,CAAC;MAChCA,KAAK,EAAEL,sBAAsB;MAC7BS,SAAS,EAAE;QAAED;MAAK;IACtB,CAAC,CAAC;IACF,OAAOJ,IAAI,CAACQ,IAAI;EACpB;AACJ,CAAC;AAED,eAAeV,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}