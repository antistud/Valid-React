/// <reference types="react" />
import type { FormSidebarExtensionProps, FieldExtensionProps as FieldExtensionPropsBase, ExtensionDeclaration, DeclarationRelativeProps } from '@graphcms/uix-sdk';
export declare function useFieldExtension(): FieldExtensionProps;
export declare function useFormSidebarExtension(): FormSidebarExtensionProps;
/**
 * @deprecated please use {@link useFieldExtension} or {@link useFormSidebarExtension}
 */
export declare function useUiExtension<Declaration extends ExtensionDeclaration>(): DeclarationRelativeProps<Declaration>;
export declare function useUiExtensionDialog<DialogReturn = any, DialogProps = Record<string, unknown>>(): {
    onCloseDialog: (value?: DialogReturn | null | undefined) => void;
} & DialogProps;
export interface FieldExtensionProps extends Omit<FieldExtensionPropsBase, 'onBlur' | 'onChange' | 'onFocus'> {
    onBlur: <T extends HTMLElement = HTMLElement>(event?: React.FocusEvent<T>) => Promise<void>;
    onChange: <T extends HTMLElement = HTMLElement>(event: React.ChangeEvent<T> | any) => Promise<void>;
    onFocus: <T extends HTMLElement = HTMLElement>(event?: React.FocusEvent<T>) => Promise<void>;
}
