import type {
  IExtensionDeclaration,
  ConfigFields,
  ExtensionPropsBase,
  ExtensionType,
} from './base';
import type {
  Form,
  Locale,
  Model,
  Stage,
  User,
  SetFieldsVisibility,
} from './type-helpers';
import type { ConfigValue } from '.';

export interface FormSidebarExtensionDeclaration extends IExtensionDeclaration {
  extensionType: typeof ExtensionType.formSidebar;
  sidebarConfig?: ConfigFields;
}

export interface FormSidebarExtensionProps extends ExtensionPropsBase {
  // TODO:Add support for these
  // isExpanded: boolean;
  // expand: (expand: boolean | ((isExpanded: boolean) => boolean)) => unknown;

  extension: {
    config: ConfigValue;
    sidebarConfig: ConfigValue;
    id: string;
  };

  form: Form;
  model: Model;
  /**
   * @deprecated Please use {@link Form.setFieldsVisibility}
   */
  setFieldsVisibility: SetFieldsVisibility;
  /**
   * @deprecated Please use {@link ExtensionPropsBase.extension extension.sidebarConfig}
   */
  sidebarConfig: Record<
    string,
    boolean | number | string | undefined | null
  > | null;

  allLocales: Locale[];
  stages: Stage[];

  entry: {
    id: string | null;
    createdBy?: User;
    updatedBy?: User;
    createdAt: Date | null;
    updatedAt: Date | null;
  } | null;
}
