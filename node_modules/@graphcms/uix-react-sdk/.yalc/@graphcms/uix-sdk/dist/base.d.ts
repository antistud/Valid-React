import type { ShowToast, OpenDialog } from './type-helpers';
import type { openAssetPicker as OpenAssetPicker } from './type-helpers/openAssetPicker';
export declare const reservedExtensionProps: string[];
export declare const ExtensionPermission: {
    readonly INPUT: "INPUT";
    readonly FORM: "FORM";
    readonly API: "API";
};
export declare const ExtensionType: {
    readonly formSidebar: "formSidebar";
    readonly field: "field";
};
export declare const ConfigType: {
    readonly string: "string";
    readonly number: "number";
    readonly boolean: "boolean";
};
export interface IExtensionDeclaration {
    name: string;
    description?: string;
    permissions?: (keyof typeof ExtensionPermission)[];
    config?: Record<ConfigVariableName, ConfigVariableSettings>;
}
export declare type ConfigVariableName = string;
export declare type ConfigVariableSettings = {
    type: keyof typeof ConfigType;
    displayName?: string;
    description?: string;
    required?: boolean;
    defaultValue?: any;
};
export declare type ConfigFields = Record<ConfigVariableName, ConfigVariableSettings>;
export declare type ConfigValue = Record<string, boolean | number | string | undefined | null> | undefined;
export declare type Project = {
    id: string;
    name: string;
    mgmtApi: string;
    mgmtToken: string;
};
export declare type Environment = {
    id: string;
    name: string;
    endpoint: string;
    authToken: string;
};
export declare type Context = {
    project: Project;
    environment: Environment;
};
export interface ExtensionPropsBase {
    context: Context;
    openDialog: OpenDialog;
    showToast: ShowToast;
    openAssetPicker: OpenAssetPicker;
    redirectParent: (location: string | Location) => Promise<void>;
    historyReplace: (url: string | HistoryCallback) => Promise<void>;
    historyPush: (url: string | HistoryCallback) => Promise<void>;
}
export interface ExtensionDialogProps extends ExtensionPropsBase {
    onCloseDialog: (value: any) => void;
}
declare type HistoryCallback = (href: Location['href']) => string;
export {};
